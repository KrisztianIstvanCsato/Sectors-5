@typeparam TItem
@inject IJSRuntime JSRuntime

<div class="container">


    <label class="label_item" for="@ItemId">
        @if (SelectedItems.Contains(Item))
        {
            <input class="checkbox" checked id="@ItemId" type="checkbox" @onchange="_ => HandleChange(Item)" />
        }
        else
        {
            <input class="checkbox" id="@ItemId" type="checkbox" @onchange="_ => HandleChange(Item)" />
        }

        <span class="option_inner">
            <span class="name">@ItemTemplate(Item)</span>
        </span>
    </label>
</div>

@code {

    [Parameter]
    public TItem Item { get; set; }

    [Parameter]
    public int ItemId { get; set; }

    [Parameter]
    public RenderFragment<TItem> ItemTemplate { get; set; }

    [Parameter]
    public List<TItem> SelectedItems { get; set; }

    [Parameter]
    public EventCallback<List<TItem>> SelectedItemsChanged { get; set; }

    private void HandleChange(TItem item)
    {
        if (SelectedItems.Contains(item))
        {
            SelectedItems.Remove(item);
        }
        else
        {
            SelectedItems.Add(item);
        }

        SelectedItemsChanged.InvokeAsync(SelectedItems);
    }
}
